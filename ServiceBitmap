public class ServiceBitmap {

    public static void rotateBitmap(ImageView imageView, GlobalState globalState) {
        if (globalState._selectedBitmapCIF.getWidth() < globalState._selectedBitmapCIF.getHeight()) {
            Bitmap bMapRotate;
            Matrix mat = new Matrix();
            mat.postRotate(90);
            bMapRotate = Bitmap.createBitmap(globalState._selectedBitmapCIF, 0, 0, globalState._selectedBitmapCIF.getWidth(), globalState._selectedBitmapCIF.getHeight(), mat, true);
            imageView.setImageBitmap(bMapRotate);
        } else {
            imageView.setImageBitmap(globalState._selectedBitmapCIF);
        }
    }

    public static void setCameraDisplayOrientation(Activity activity, int cameraId, android.hardware.Camera camera) {
        Camera.CameraInfo info = new Camera.CameraInfo();

        Camera.getCameraInfo(cameraId, info);

        int rotation = activity.getWindowManager().getDefaultDisplay().getRotation();
        int degrees = 0;

        switch (rotation) {
            case Surface.ROTATION_0:
                degrees = 0;
                break;
            case Surface.ROTATION_90:
                degrees = 90;
                break;
            case Surface.ROTATION_180:
                degrees = 180;
                break;
            case Surface.ROTATION_270:
                degrees = 270;
                break;
        }

        int result;
        if (info.facing == Camera.CameraInfo.CAMERA_FACING_FRONT) {
            result = (info.orientation + degrees) % 360;
            result = (360 - result) % 360;  // compensate the mirror
        } else {  // back-facing
            result = (info.orientation - degrees + 360) % 360;
        }
        camera.setDisplayOrientation(result);
    }
}

